version: '3.9'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             gunicorn geo_notes.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env

  tests:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["pytest", "--cov=accounts", "-cov=pois", "-cov=geo_notes", "--cov-report=term-missing"]
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      - DJANGO_SETTINGS_MODULE=geo_notes.settings

volumes:
  postgres_data:
